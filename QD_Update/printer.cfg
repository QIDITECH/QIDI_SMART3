#Mates3
# This file contains common pin mappings for MKS SKIPR
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the MKS SKIPR. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# MKS SKIPR with that SD card.
# This file contains common pin mappings for MKS SKIPR
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the MKS SKIPR. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# MKS SKIPR with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include MKS_THR.cfg]
[mcu]
# The hardware use USART1 PA10/PA9 connect to RK3328
#serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_4D0045001850314335393520-if00
serial: /dev/ttyS0
restart_method: command


#[mcu MKS_THR]
#serial:/dev/serial/by-id/usb-Klipper_rp2040_D5CE4D9543D14858-if00

#canbus_uuid: 11aa22bb33cc
#####################################################################
#   冷却风扇
#####################################################################

[extruder]
step_pin: MKS_THR:gpio5
dir_pin: MKS_THR:gpio4
enable_pin: !MKS_THR:gpio10
rotation_distance: 53.5  #22.6789511	#Bondtech 5mm Drive Gears
gear_ratio: 1628:170				
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
min_temp: 0
max_temp: 360
min_extrude_temp: 175
smooth_time: 0.000001


heater_pin: MKS_THR:gpio0
sensor_type:MAX6675
#   One of "MAX6675", "MAX31855", "MAX31856", or "MAX31865".
#   One of "MAX6675", "MAX31855", "MAX31856", or "MAX31865".
sensor_pin:MKS_THR:gpio17
#   The chip select line for the sensor chip. This parameter must be
#   provided.
spi_speed: 100000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 4000000.
#spi_bus:spi1
spi_software_sclk_pin:MKS_THR:gpio18
spi_software_mosi_pin:MKS_THR:gpio19
spi_software_miso_pin:MKS_THR:gpio16
#   See the "common SPI settings" section for a description of the
#   above parameters.
#tc_type: K
#tc_use_50Hz_filter: False
#c_averaging_count: 1
#   The above parameters control the sensor parameters of MAX31856
#   chips. The defaults for each parameter are next to the parameter
#   name in the above list.
max_power: 1
control : pid  
pid_Kp=14.734
pid_Ki=6.549 
pid_Kd=8.288

pressure_advance: 0.018
pressure_advance_smooth_time: 0.03
max_extrude_cross_section:500
instantaneous_corner_velocity: 10.000
max_extrude_only_distance: 100.0
max_extrude_only_velocity:5000
max_extrude_only_accel:2000
step_pulse_duration:0.000002
max_extrude_cross_section: 10  

[tmc2209 extruder]
uart_pin: MKS_THR:gpio6
interpolate: True
run_current: 0.714
#hold_current: 0.2
#sense_resistor: 0.110
stealthchop_threshold: 0


[adxl345]
cs_pin: MKS_THR:gpio13
spi_software_sclk_pin: MKS_THR:gpio14
spi_software_mosi_pin: MKS_THR:gpio15
spi_software_miso_pin: MKS_THR:gpio12
axes_map: -x, z, -y


[printer]
kinematics:corexy
max_velocity: 600
max_accel: 20000
max_accel_to_decel: 10000
max_z_velocity: 10
max_z_accel: 500
square_corner_velocity: 8

##移动配置============================================================================================================


[force_move]
enable_force_move : true

[gcode_macro M84]
rename_existing:M84.1
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
	SET_STEPPER_ENABLE STEPPER=extruder enable=0
	SET_KINEMATIC_POSITION
	
[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
    SET_KINEMATIC_POSITION X=150
    SET_KINEMATIC_POSITION Y=150
	SET_KINEMATIC_POSITION Z=150




[stepper_x]
step_pin:PB4
dir_pin:PB3
enable_pin:!PB5
microsteps:16
rotation_distance: 39.9
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:tmc2209_stepper_x:virtual_endstop
position_min: -5.5  
position_endstop: -4.5
position_max:185
homing_speed:40
homing_retract_dist:0
homing_positive_dir:False
step_pulse_duration:0.000002

[stepper_y]
step_pin:PC14
dir_pin:PC13
enable_pin:!PC15
microsteps: 16
rotation_distance: 39.9
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:tmc2209_stepper_y:virtual_endstop
position_min: -5.5  
position_endstop: -4.5
position_max: 185
homing_speed:40
homing_retract_dist:0
homing_positive_dir:False
step_pulse_duration:0.000002



[stepper_z]
step_pin:PC10
dir_pin:PA15
enable_pin: !PC11
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin:!PC3 #for Z-max; endstop have'!' is NO
position_endstop:171
position_max:172
position_min: -4
homing_speed: 10
second_homing_speed: 8
homing_retract_dist: 8.0
homing_positive_dir:true
step_pulse_duration:0.000002

[tmc2209 stepper_x]
uart_pin: PD2
run_current:1.07
#hold_current: 0.5
interpolate: True
stealthchop_threshold: 0
diag_pin:^PB8
driver_SGTHRS: 100
[tmc2209 stepper_y]
uart_pin: PB9
run_current: 1.07
#hold_current: 0.5
interpolate: True
stealthchop_threshold: 0
diag_pin:^PC0
driver_SGTHRS: 100


#[tmc2240 stepper_y]
#cs_pin:PB9
#spi_software_sclk_pin:PA5
#spi_software_mosi_pin:PA7
#spi_software_miso_pin:PA6
#spi_speed:200000
#run_current: 1.07
#hold_current: 0.5
#sense_resistor: 0.110
#interpolate:true
#stealthchop_threshold:1
#diag0_pin:!PC0
#driver_SGT:1

#[tmc2240 stepper_x]
#cs_pin:PD2
#spi_software_sclk_pin:PA5
#spi_software_mosi_pin:PA7
#spi_software_miso_pin:PA6
#spi_speed:200000
#run_current: 1.07
#hold_current: 0.5
#sense_resistor: 0.110
#interpolate:true
#stealthchop_threshold:1
#diag0_pin:!PB8
#driver_SGT:1


[tmc2209 stepper_z]
uart_pin: PC5
run_current: 0.28
hold_current: 0.2
interpolate: True
stealthchop_threshold: 1200


##归零流程修改
[homing_override]
set_position_X:0
set_position_y:0
#set_position_z:0
axes: xy
gcode: 
    G91
    {% set HOME_CUR = 1 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}

	{% if params.X is defined %}
	    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR * 0.8} HOLDCURRENT={HOME_CUR * 0.8}
        G28 X
		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
        {% if endstop_x_query_state==triggered %}         
            BEEP I=1 DUR=100       
        {% endif %}
        G1 X10 F1200
    {% endif %}

    {% if params.Y is defined %}
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR * 0.9} HOLDCURRENT={HOME_CUR * 0.9}
		G28 Y
		SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
       {% if endstop_y_query_state==triggered %}        
            BEEP I=1 DUR=100          
       {% endif %}
       G1 Y10 F1200
    {% endif %}

    {% if params.Z is defined %}
       G28 Z
      {% if endstop_Z_query_state==triggered %}        
           BEEP I=1 DUR=100
      {% endif %}
	  
    {% endif %}

    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}

    G28 Z
    {% if endstop_z_query_state==triggered %}
        BEEP I=1 DUR=100
    {% endif %}
	
    G1 X10 F2400
    G1 Y20 F2400
    G4 P2000
    
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR * 0.8} HOLDCURRENT={HOME_CUR * 0.8}
    G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    BEEP I=1 DUR=100  
    G1 X10 F1200
    
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR * 0.9} HOLDCURRENT={HOME_CUR * 0.9}
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    BEEP I=1 DUR=100        
    
    G1 Y10 F2400 
    G1 Z-10  F600 
    {% endif %}
    {% endif %}
    {% endif %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
    SET_VELOCITY_LIMIT ACCEL=10000
    G90
    G1 X0 Y0 F2400



##热床热腔==================================================================================================================

[heater_bed]
heater_pin: PB10
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
max_power: 1.0
control = pid
pid_Kp=63.418 
pid_Ki=1.342 
pid_Kd=749.125
min_temp: -20
max_temp: 122

#[heater_generic hot]
#gcode_id:
#   使用M105查询温度时使用的ID。
#   必须提供此参数。
#heater_pin:PC8
#max_power:1.0
#sensor_type:NTC 100K MGB18-104F39050L32
#sensor_pin:PA1
# smooth_time:
#control:pid
#pid_Kp:71.039
#pid_Ki:2.223
#pid_Kd:567.421
# pwm_cycle_time:
#min_temp:-20
#max_temp:70

#[verify_heater hot]
#max_error: 120
#check_gain_time:360
#hysteresis: 10
#heating_gain: 1



[verify_heater extruder]
max_error: 120
check_gain_time:20
hysteresis: 10
heating_gain: 5

[verify_heater heater_bed]
max_error: 120
check_gain_time:120
hysteresis: 10
heating_gain: 2


##一些引脚定义======================================

##主板上大涡轮风扇
[output_pin fan2]
pin: PA8
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 0.00
scale: 255
shutdown_value: 0.0

##喷头喉管风扇 50度自启动
#[heater_fan my_nozzle_fan1]
#pin:PC9
#max_power:1
#shutdown_speed:1
#cycle_time:0.05
#kick_start_time:0.05
#off_below:0
#heater:extruder
#heater_temp:50.0

##活性炭吹风扇
[output_pin fan1]
pin:PC9
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 255
scale: 255
shutdown_value: 0.0


## FAN0  喉管风扇
[heater_fan hotend_fan]
pin:MKS_THR:gpio1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0
off_below: 0


## FAN1  吹模型风扇
[output_pin fan0]
pin: MKS_THR:gpio2
pwm: True
cycle_time: 0.0100
hardware_pwm: false
value: 0
scale: 255
shutdown_value: 0.0

##LED 灯
[output_pin caselight]
##  Chamber Lighting - In 5V-RGB Position
pin: PC7
pwm: false
shutdown_value:0
value:1
#cycle_time:0.01

[output_pin beeper]
##  Chamber Lighting - In 5V-RGB Position
pin: PA2
pwm: false
shutdown_value:0
value:0


[output_pin pwc]
pin: PA3
pwm: False
value: 1
shutdown_value: 1



##宏定义================================================================

[filament_switch_sensor fila]
pause_on_runout: True
runout_gcode:
            PAUSE
            SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
event_delay: 3.0
pause_delay: 0.5
switch_pin: !PC1

[bed_mesh]
speed:150                #调平速度
horizontal_move_z:10   #调平中Z抬高高度
mesh_min:12,45        #探测点最小位置
mesh_max:160,170      #探测点最大位置
probe_count:4,4      #调平点数
algorithm:bicubic
bicubic_tension:0.2
mesh_pps: 4, 4

#[bltouch]
#sensor_pin:^MKS_THR:gpio21
#control_pin:MKS_THR:gpio11
[probe]
pin: ^!MKS_THR:gpio21
x_offset: -7.7
y_offset: 40.4
z_offset: 0.0
speed: 5
samples: 3
samples_result: average
sample_retract_dist: 3.0
samples_tolerance: 0.08
samples_tolerance_retries:3

#[gcode_macro G30]
#    G28
#    G1 X100 Y130 Z10
#    PROBE_CALIBRATE


[resonance_tester]
accel_chip:adxl345
probe_points:
    90, 90, 10  # an example



[gcode_macro SHAPER_CALIBRATE]
rename_existing: RESHAPER_CALIBRATE
gcode:
    RESHAPER_CALIBRATE FREQ_START=30 FREQ_END=150

#[gcode_macro G28]
#gcode:
#    {% if "xyz" not in printer.toolhead.homed_axes %}
#        G28
#    {% endif %}




[gcode_macro PRINT_END]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}         ; set timeout back to configured value
    CLEAR_PAUSE
#    SDCARD_RESET_FILE
    
    M106 P2 S0
    M106 S0
    M106 T-2 S0   #开启活性炭风扇
    
    M104 S0
    M140 S0
#    M141 S0

    M220 S100
    M221 S100
    M84
      
    BEEP I=2 DUR=500
      

[gcode_macro PRINT_END_POWEROFF]
gcode:
       M107
       M104 S0
       M140 S0
       G28 Z
       M84
        BEEP I=2 DUR=500
      M81	
	
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% if (printer.gcode_move.position.z) < printer.toolhead.axis_maximum.z-20 %}       ; check that zhop doesn't exceed z max
        G1 Z{printer.toolhead.axis_maximum.z-20} F900                                         
    {% endif %}
    G1  X0 Y0 F7800
    M107
    M106 T-2 S0

    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
#       SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0                                             ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
#            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
#        SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[pause_resume]


[display_status]




[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for iteration in range(i|int) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{dur}
            SET_PIN PIN=beeper VALUE=0
    		G4 P{dur}
        {% endfor %}
    {% endif %}



[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28


[gcode_macro G29]
gcode:
    BED_MESH_CLEAR      #清除调平数据
    G28   
    BED_MESH_CALIBRATE  #自动调平

[gcode_macro G30]
gcode:
    BED_MESH_CLEAR      #清除调平数据
#    G28 
    BED_MESH_CALIBRATE mesh_min=10,10  mesh_max=170,170  METHOD=manual #手动动调平



[gcode_macro M141]
gcode:
      SET_HEATER_TEMPERATURE HEATER=hot TARGET={params.S}

    
[gcode_macro M106]
gcode:
    {% if params.P is defined %}
      {% if params.S is defined %}
        SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
      {% else %}
        SET_PIN PIN=fan{params.P|int} VALUE=255
      {% endif %}
    {% endif %} 

    {% if params.T is defined %}
        {% if (params.T|int)==-2 %}
          {% if params.S is defined %}       
            SET_PIN PIN=fan1 VALUE={params.S|int}
          {% else %}
            SET_PIN PIN=fan1 VALUE=255
          {% endif %}
        {% endif %}
    {% endif %}

    {% if params.P is undefined %}
    {% if params.T is undefined %}
    {% if params.S is defined %}
            SET_PIN PIN=fan0 VALUE={params.S|int}
       {% else %}
            SET_PIN PIN=fan0 VALUE=255       
    {% endif %}
    {% endif %}
    {% endif %}



[gcode_macro M107]
gcode:  
    SET_PIN PIN=fan0 VALUE=0 
#    SET_PIN PIN=fan1 VALUE=0
    SET_PIN PIN=fan2 VALUE=0 

[gcode_macro M303]
gcode:
    {% if params.E is defined %}
     {% if params.S is defined %}
        {% if (params.E|int)==-1 %} 
         PID_CALIBRATE HEATER=heater_bed TARGET={params.S|int}
        {% endif %}
        {% if (params.E|int)==0 %}
         PID_CALIBRATE HEATER=extruder TARGET={params.S|int}
        {% endif %}
     {% endif %}
  {% endif %}


[gcode_macro M8029]
gcode:
     {% if params.D is defined %}
       {% if (params.D|int)==1 %} 
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=1
       {% endif %}
       {% if (params.D|int)==0 %} 
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=0
       {% endif %}
     {% endif %}

     
[gcode_macro M900]
gcode:
   SET_PRESSURE_ADVANCE ADVANCE={params.K}
   SET_PRESSURE_ADVANCE SMOOTH_TIME={params.T}
   

[gcode_macro M290]
gcode:
   SET_GCODE_OFFSET Z_ADJUST={params.Z}

[gcode_macro M901]
gcode:
    G28
    SHAPER_CALIBRATE

[gcode_macro M81]
description: PowerOff
gcode: 
  M84
  SET_PIN PIN=pwc VALUE=0



       
[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro M25]
rename_existing: M9925
gcode:
    PAUSE



[output_pin sound]
pin: PA13
value:1


[gcode_macro beep_on]
gcode:
    SET_PIN PIN=sound VALUE=1
    
[gcode_macro beep_off]
gcode:
    SET_PIN PIN=sound VALUE=0

[gcode_arcs]
resolution: 1.0

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}
    

[gcode_macro M1029]
gcode:
#    X_TWIST_PROFILE_LOAD NAME=default
#    X_TWIST_COMPENSATE_MESH MESH_NAME=default COMPENSATION_NAME=default
#    SAVE_CONFIG



[idle_timeout]
timeout: 5400


[mcu rpi]
serial: /tmp/klipper_host_mcu

[virtual_sdcard]
#path:/home/mks/uploads
path: ~/gcode_files

[x_twist_compensation]
speed: 150
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
start_x: 15
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
end_x: 160
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
y: 140
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [x_twist_compensation default]
#*# recommended_z_offset = -4.650000
#*# z_compensations = 0, 0
